"tsan_report_addr2line" - convert Thread Sanitizer report in addr2line way.

Utility works with report, generated by Thread Sanitizer for
trace generated by KernelStrider.

In that report every instruction address in the call stacks are
translated using template

	FUNCTION FILENAME:LINENO
	
where:

 - FUNCTION - name of the function to which the instruction belongs
 
 - FILENAME:LENENO - line in the source file from which the instruction
has generated at comilation.

This template is similar to one which is used by `addr2line` utility with
"-s" and "-f" parameters.

Original Thread Sanitizer report is read from STDIN, report with
translated addresses is written into STDOUT.

The utility needs two files for that translation.

First one is the module, for which trace is generated.

Second file is text file which contains section to load address mapping
in form

ADDRESS1 SECTION_NAME1
ADDRESS2 SECTION_NAME2
...

This file may be obtained using 'kedr_show_target_sections.sh' utility.


NOTE: Module file should contain debug information, otherwise "?? ??:0"
will be printed for each address.
Some Linux distros use kernel without debug information, but there is a
way to obtain packages with that information.
E.g., on Ubuntu these packages has same names, as normal packages, but
with `-dbg` suffix (see https://wiki.ubuntu.com/DebuggingProgramCrash
for information about how to obtain these packages).

Module files from that packages should be passed to the utility instead
of files for running kernel.


Standard use cases:

1.

*-linux-debug-ts_offline < trace_file 2> tsan_report_file
tsan_report_addr2line module_file sections_file < tsan_report_file

where "tsan_report_file" will be file with original Thread Sanitizer report.

2.

*-linux-debug-ts_offline < trace_file | \
tsan_report_addr2line module_file sections_file

without saving original Thread Sanitizer report.
