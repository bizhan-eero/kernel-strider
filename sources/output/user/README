					Trace Receiver

Program, intended for receive trace generated by 'kedr_trace_sender' kernel
module(in ../kernel).

					Use cases

In all cases it is assumed that 'kedr_trace_sender' module is running on
same machine.
Otherwise inet address of this machine should passed to '--init-session'
and '--break-session' commands instead of '127.0.0.1'.

				1. Single trace.

 $ ./kedr_save_trace --start ~/kernel/trace

start trace capturing, storing trace to '~/kernel/trace' directory.

$ ./kedr_save_trace --init-session 127.0.0.1

setup session with 'kedr_trace_sender' module (the module should be
loaded into kernel before this command).

$ <loading module under kernel-strider, target module>

$ <... do anything>

$ <unloading target module>

$ ./kedr_save_trace --break-session 127.0.0.1

break session with 'kedr_trace_sender' module. Command may be omitted,
if the module is not intended to send other traces.

$ ./kedr_save_trace --stop

stop trace capturing.

For capture next trace, all steps from the first one should be repeated.

				2. Multiple traces.

$ ./kedr_save_trace --start ~/kernel/trace/%u

start trace capturing, each trace will be stored to
'~/kernel/trace/UUID' directory, where UUID is Unique Universal Identifier
of the trace, which is unique for every new trace generated. 

$ ./kedr_save_trace --init-session 127.0.0.1

setup session with 'kedr_trace_sender' module (the module should be
loaded into kernel before this command).

$ <loading the first module under kernel-strider, target module>

$ <... do anything, reloading target module, load another target module...>

$ <unloading the last target module>

$ ./kedr_save_trace --break-session 127.0.0.1

break session with 'kedr_trace_sender' module. Command may be omitted,
if the module is not intended to send any other traces.

$ ./kedr_save_trace --stop

stop trace capturing.

				3. Single trace, automatic mode.

Single trace with some sync commands for make trace receiving process
reliable.

$ ./kedr_save_trace --start ~/kernel/trace

start trace capturing, storing trace to '~/kernel/trace' directory.

$ ./kedr_save_trace --init-session 127.0.0.1

setup session with 'kedr_trace_sender' module (the module should be
loaded into kernel before this command).

$ <loading module under kernel-strider, target module>

$ ./kedr_save_trace --start-trace

wait until the first packet of new trace is arrived and processed.

$ <... do anything>

$ <unloading target module>

$ ./kedr_save_trace --stop-trace

wait until the last packet of the trace is arrived and processed.

$ ./kedr_save_trace --break-session 127.0.0.1

break session with 'kedr_trace_sender' module.

$ ./kedr_save_trace --stop

stop trace capturing.


Without '--stop-trace' command '--break-session' may break session with
incomplete trace received.
Without '--start-trace' command '--stop-trace' may return before trace
begins to be received.

Commands to './kedr_save_trace' may be given in one invocation:

$ ./kedr_save_trace --stop-trace --break-session 127.0.0.1 --stop