[group]
	# Name of the target function
	function.name = strpbrk

	# Lookup the address of the function via kallsyms because the
	# compiler may not allow using &<name>. The actual value of
	# this parameter does not matter as long as it is not empty.
	function.lookup = yes
	
	code.post =>>
		void *data = NULL;
		unsigned long str = KEDR_LS_ARG1(ls);
		unsigned long chars = KEDR_LS_ARG2(ls);
		unsigned long ret  = KEDR_LS_RET_VAL(ls);
		unsigned long len;
		unsigned long size;
		struct kedr_event_handlers *eh;
		
		eh = kedr_get_event_handlers();
		
		len = (unsigned long)strlen((const char *)chars) + 1;
		if (ret == 0)
			size = (unsigned long)strlen((const char *)str) + 1;
		else 
			size = ret + 1 - str; 
			
		
		/* strpbrk() reads the whole 'chars' string and the first
		 * 'size' bytes from 'str'. */
		if (eh->begin_memory_events != NULL)
			eh->begin_memory_events(eh, ls->tid, 2,
				&data);
		
		if (eh->on_memory_event != NULL) {
			eh->on_memory_event(eh, ls->tid, info->pc, 
				chars, len, KEDR_ET_MREAD, data);
			eh->on_memory_event(eh, ls->tid, info->pc, 
				str, size, KEDR_ET_MREAD, data);
		}

		if (eh->end_memory_events != NULL)
			eh->end_memory_events(eh, ls->tid, data);
	<<
#######################################################################
