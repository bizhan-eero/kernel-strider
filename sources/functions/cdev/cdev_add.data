[group]
	# Name of the target function
	function.name = cdev_add
	
	code.pre =>>
	struct cdev *p;
	dev_t dev;
	unsigned int count;
	unsigned int mn;
	unsigned int mj;
	unsigned int i;
	struct kedr_call_info *info = (struct kedr_call_info *)(ls->info);
	unsigned long pc;
	unsigned long tid;
	struct module *target;
	struct kedr_cdev_hb_id *item;
	
	pc = info->pc;
	tid = ls->tid;
	target = ls->fi->owner;
		
	p = (struct cdev *)KEDR_LS_ARG1(ls);
	dev = (dev_t)KEDR_LS_ARG2(ls);
	count = (unsigned int)KEDR_LS_ARG3(ls);
	mn = MINOR(dev);
	mj = MAJOR(dev);
	
	for (i = 0; i < count; ++i) {
		item = create_ids_for_cdev(mj, mn + i, target);
		if (item == NULL) {
			pr_warning(KEDR_MSG_PREFIX 
"cdev_add.pre: failed to obtain IDs for the device (%u, %u)\n", 
				mj, mn + i);
			continue;
		}
		
		trigger_reg_start_signal_events(tid, pc, item, target);
	}
	set_callback_handlers(p);
	<<
#######################################################################
